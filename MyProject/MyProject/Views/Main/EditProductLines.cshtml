@model MyProject.Models.ProductionLine

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditProductLines</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>ProductionLine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductionLineId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
            </div>
        </div>


        @for (int i = 0; i < Model.EquipmentContent.Count; i++)
        {
            <div class="form-group">
                <label class="control-label col-md-2" for="equipments @i ">Оборудование №@{int num = i + 1;}@num </label>

                <div class="col-md-10">
                    <input class="form-control text-box single-line" id="equipments @i " name="equipments" type="text" value="@Model.EquipmentContent.ElementAt(i)">
                    <span class="field-validation-valid text-danger" data-valmsg-for="equipments" data-valmsg-replace="true"></span>

                </div>
            </div>
        }

        <div ID="items">
            <input type="button" value="Добавить поле" onClick="AddItem();" ID="add">
        </div>

        <script language="javascript">
            var items = @Model.EquipmentContent.Count;
            function AddItem() {
                div = document.getElementById("items");
                button = document.getElementById("add");
                items++;
                newitem = "<div class=\"form-group\"><label class=\"control-label col-md-2\" for=\"equipments " + items + "\">Оборудование №" + items + "</label>";
                newitem += "<div class=\"col-md-10\"><input class=\"form-control text-box single-line\" id=\"equipments " + items + "\" type=\"text\" name=\"equipments\"><span class=\"field-validation-valid text-danger\" data-valmsg-for=\"equipments\" data-valmsg-replace=\"true\"></span></div></div>";
                newnode = document.createElement("span");
                newnode.innerHTML = newitem;
                div.insertBefore(newnode, button);
            }
        </script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
