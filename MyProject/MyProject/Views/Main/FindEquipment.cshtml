@model IEnumerable<MyProject.Models.Equipment>

@{
    /**/

    ViewBag.Title = "FindEquipment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<MyProject.Models.Equipment> equipments = new List<MyProject.Models.Equipment>();
    List<double> times = ViewBag.Times;
    List<string> errors = ViewBag.Errors;
    double totalWorkTime = 0.0;
    if (ViewBag.TotalWorkTime != null)
    {
        totalWorkTime = ViewBag.TotalWorkTime;
    }
    int timeScale = Convert.ToInt32(System.Math.Ceiling(totalWorkTime));
    double oneHour = 100.0 / timeScale;
    var oneHourWidth = string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.00}", oneHour);
    double margin = 0.0;
    string product = ViewBag.productname;
    if (ViewBag.Guids != null)
    {
        List<Guid> myGuids = ViewBag.Guids;
        foreach (var i in myGuids)
        {
            foreach (var m in Model)
            {
                if (m.EquipmentId == i)
                {
                    equipments.Add(m);
                }
            }
        }
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>FindEquipment</title>
</head>

<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <p>На данной странице Вы сможете подобрать оборудование для производства желаемого продукта и передаботки определенного количества входного сырья. </p>
    <p>Чтобы начать, выберите желаемый готовый продукт в поле со списком и введите количество сырья, которое будет отправлено на переработку. </p>
    <hr />
    <form method="get">
        <div class="form-inline">
            <label class="control-label label-filter">Продукт: </label>
            <select class="form-control text-box single-line form_control-p-line" id="product" name="productname">
                @foreach (var p in ViewBag.Products)
                {
                    <option>@p</option>}
            </select>
            <script type="text/javascript">
                $(document).ready(function () {
                            $('#product option:contains("@product")').prop('selected', true);
                            });
            </script>
            <label class="control-label label-filter">Количество сырья, кг: </label>
            <input class="form-control text-box single-line form_control-p-line" id="quantity" name="quantityname" type="number" value="@ViewBag.Quantity">
            <input type="submit" value="Подобрать!" class="btn btn-default find-btn" />
        </div>
    </form>

    @if (errors != null)
    {
        if (errors.Count != 0)
        {
            <hr />
            <div class="alert alert-warning">
                <strong>К сожалению, в нашей базе нет всего необходимого Вам оборудования. <br />Данные о времени производства и график работы оборудования могут быть не точными!</strong><br />
                @foreach (string error in errors)
                {
                    @error; <br />
                }
            </div>
        }
    }

    @if (equipments.Count != 0)
    {
        <table class="table">
            <tr>
                <th>#</th>
                <th>Тип</th>
                <th>Модель</th>
                <th>Производитель</th>
                <th>Мощность, кг/час.</th>
                <th> Характеристики </th>
            </tr>
            @for (int i = 0; i < equipments.Count; i++)
            {
                MyProject.Models.Equipment eq = equipments.ElementAt(i);
                <tr>
                    <td>@{int ii = i + 1;} @ii</td>
                    <td>@eq.Type</td>
                    <td>@eq.Name</td>
                    <td>@eq.Producer</td>
                    <td>@eq.Productivity</td>
                    <td>@eq.Characteristics</td>
                </tr>
            }
        </table>

        <hr />
        <div class="content">
            <label class="label-find11">Весь процесс происзводства займет @System.Math.Round(totalWorkTime, 2) ч.</label>
            <div class="box">

                @for (int i = 0; i < times.Count; i++)
                {
                    double myWidth = times.ElementAt(i) * 100 / totalWorkTime;
                    double minutes = times.ElementAt(i) * 60;
                    Random ran = new Random(Guid.NewGuid().GetHashCode());
                    var curWidth = string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.00}", myWidth);
                    string value = equipments.ElementAt(i).Type;
                    if (myWidth > 10) { value = equipments.ElementAt(i).Type + " " + System.Math.Round(minutes, 0) + "мин."; } else { value = ""; }

                    <div title="@equipments.ElementAt(i).Name | @equipments.ElementAt(i).Type | Время работы: @System.Math.Round(minutes, 0) мин." style="background-color: rgb(@ran.Next(20, 50), @ran.Next(150, 255), @ran.Next(255)); border:thin; width:@curWidth%;">@value &nbsp;</div>
                }
            </div>
        </div>

        <hr />
        <div class="content">
            <label class="label-find11">График производственных процессов:</label>
            <div class="box">
                @for (int i = 0; i < timeScale; i++)
                {                    
                    <div class="shema-div" style="width:@oneHourWidth%">@i</div>
                }
            </div>


            

                @for (int i = 0; i < times.Count; i++)
                {
                    double myWidth = times.ElementAt(i) * oneHour;
                    double minutes = times.ElementAt(i) * 60;
                    double curMargin = margin;
                    double curMarginText = curMargin+myWidth;

                    var curMarginString = string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.00}", curMargin);
                    var curWidth = string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.00}", myWidth);
                    var curMarginTextString = string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.00}", curMarginText);

                    margin += myWidth;
                    Random ran = new Random(Guid.NewGuid().GetHashCode());
                    string value = equipments.ElementAt(i).Type + " " + System.Math.Round(minutes, 0) + "мин.";
            <div class="box">
                <div title="@equipments.ElementAt(i).Name | @equipments.ElementAt(i).Type | Время работы: @System.Math.Round(minutes, 0) мин." style="margin-left:@curMarginString%; background-color:green; border:thin; width:@curWidth%;">&nbsp;</div>
                <div style="text-align:left; margin-left:-@curMarginTextString%">@value</div>
            </div>
                }
            
        </div>

    }
</body>
</html>
